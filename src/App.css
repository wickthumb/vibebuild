/* Global styles for Synthwave theme */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #0f0f1a;
  color: #ffffff;
  font-family: "VT323", "Courier New", monospace;
  overflow-x: hidden;
  margin: 0;
  padding: 0;
}

.App {
  min-height: 100vh;
  position: relative;
  width: 100%;
  max-width: 100%;
  margin: 0;
  padding: 0;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #1a1a2e;
}

::-webkit-scrollbar-thumb {
  background: #7b42f6;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #ff00ff;
  box-shadow: 0 0 8px #ff00ff;
}

/* Selection color */
::selection {
  background-color: #ff00ff;
  color: #ffffff;
}

/* CRT effect */
.crt::before {
  content: " ";
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
    linear-gradient(
      90deg,
      rgba(255, 0, 0, 0.06),
      rgba(0, 255, 0, 0.02),
      rgba(0, 0, 255, 0.06)
    );
  z-index: 2;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}

/* Flicker animation */
@keyframes flicker {
  0% {
    opacity: 0.9;
  }
  5% {
    opacity: 0.85;
  }
  10% {
    opacity: 0.9;
  }
  15% {
    opacity: 0.9;
  }
  20% {
    opacity: 1;
  }
  50% {
    opacity: 0.95;
  }
  80% {
    opacity: 0.9;
  }
  90% {
    opacity: 0.95;
  }
  100% {
    opacity: 1;
  }
}

/* Apply CRT effect to the entire app */
.App {
  animation: flicker 0.15s infinite alternate;
}

/* Neon text effect */
.neon-text {
  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #ff00ff, 0 0 20px #ff00ff,
    0 0 25px #ff00ff;
}

.neon-text-blue {
  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #08f7fe, 0 0 20px #08f7fe,
    0 0 25px #08f7fe;
}

.neon-text-purple {
  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #7b42f6, 0 0 20px #7b42f6,
    0 0 25px #7b42f6;
}

.neon-text-teal {
  text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #01ffc3, 0 0 20px #01ffc3,
    0 0 25px #01ffc3;
}

/* Neon border effect */
.neon-border {
  box-shadow: 0 0 5px #ff00ff, 0 0 10px #ff00ff, 0 0 15px #ff00ff;
}

.neon-border-blue {
  box-shadow: 0 0 5px #08f7fe, 0 0 10px #08f7fe, 0 0 15px #08f7fe;
}

.neon-border-purple {
  box-shadow: 0 0 5px #7b42f6, 0 0 10px #7b42f6, 0 0 15px #7b42f6;
}

.neon-border-teal {
  box-shadow: 0 0 5px #01ffc3, 0 0 10px #01ffc3, 0 0 15px #01ffc3;
}

/* Resume styles */
.resume-content {
  scrollbar-width: thin;
  scrollbar-color: #7b42f6 #1a1a2e;
}

.timeline {
  position: relative;
}

.timeline::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 10px;
  width: 2px;
  background: rgba(123, 66, 246, 0.3);
  z-index: 1;
}

/* Terminal styles */
.terminal-text {
  scrollbar-width: thin;
  scrollbar-color: #7b42f6 #1a1a2e;
}

/* Game container styles */
.game-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.8);
  /* Prevent scrolling when arrow keys are pressed */
  overflow: hidden;
}

/* Prevent scrolling when games are active */
.tetris-container,
.snake-container,
.memory-container {
  overflow: hidden;
}

.game-window {
  position: relative;
  background-color: rgba(15, 15, 26, 0.9);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 20px rgba(123, 66, 246, 0.5);
}

.game-header {
  padding: 8px;
  text-align: center;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.game-close-btn {
  background: none;
  border: none;
  color: #fff;
  font-size: 16px;
  cursor: pointer;
}

.game-content {
  padding: 16px;
}

/* Tetris styles */
.tetris-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.8);
}

.tetris-board {
  position: relative;
  width: 200px;
  height: 400px;
  border: 2px solid #ff00ff;
  box-shadow: 0 0 10px #ff00ff;
  background-color: rgba(15, 15, 26, 0.9);
  overflow: hidden;
}

.tetris-cell {
  position: absolute;
  width: 18px;
  height: 18px;
  border: 1px solid rgba(0, 0, 0, 0.3);
}

.tetris-controls {
  margin-top: 15px;
  color: #ccc;
  font-size: 14px;
  text-align: center;
}

/* Snake styles */
.snake-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.8);
}

.snake-board {
  position: relative;
  width: 300px;
  height: 300px;
  border: 2px solid #fe75fe;
  box-shadow: 0 0 10px #fe75fe;
  background-color: rgba(15, 15, 26, 0.9);
  overflow: hidden;
}

.snake-segment {
  position: absolute;
  width: 15px;
  height: 15px;
  border-radius: 2px;
  background-color: #fe75fe;
  box-shadow: 0 0 5px #fe75fe;
}

.snake-food {
  position: absolute;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background-color: #01ffc3;
  box-shadow: 0 0 5px #01ffc3;
}

/* Memory game styles */
.memory-container {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.8);
}

.memory-board {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 10px;
  width: 320px;
  height: 320px;
}

.memory-card {
  width: 70px;
  height: 70px;
  background-color: #08f7fe;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 24px;
  box-shadow: 0 0 5px #08f7fe;
  transition: all 0.3s ease;
  transform-style: preserve-3d;
}

.memory-card.flipped {
  transform: rotateY(180deg);
  background-color: #1a1a2e;
}

.memory-card.matched {
  background-color: #01ffc3;
  box-shadow: 0 0 10px #01ffc3;
}

/* Responsive styles */
#root {
  width: 100%;
  max-width: 100%;
  margin: 0;
  padding: 0;
}

/* Media queries for responsive design */
@media (max-width: 768px) {
  .grid-container {
    grid-template-columns: 1fr !important;
    height: auto !important;
  }

  .resume-content,
  .terminal-text {
    height: 50vh !important;
  }

  .header-title {
    font-size: 1.5rem !important;
  }

  .header-subtitle {
    font-size: 1rem !important;
  }

  .tetris-board {
    width: 180px;
    height: 360px;
  }

  .snake-board {
    width: 250px;
    height: 250px;
  }

  .memory-board {
    width: 280px;
    height: 280px;
  }

  .memory-card {
    width: 60px;
    height: 60px;
  }
}

@media (max-width: 480px) {
  .resume-content,
  .terminal-text {
    height: 40vh !important;
  }

  .timeline::before {
    left: 5px;
  }

  .tetris-board {
    width: 160px;
    height: 320px;
  }

  .tetris-cell {
    width: 16px;
    height: 16px;
  }

  .snake-board {
    width: 200px;
    height: 200px;
  }

  .memory-board {
    width: 240px;
    height: 240px;
  }

  .memory-card {
    width: 50px;
    height: 50px;
    font-size: 20px;
  }
}

/* Remove default Vite styles that might interfere */
.logo,
.card,
.read-the-docs {
  display: none;
}

/* Terminal input cursor animation */
@keyframes blink-cursor {
  0%,
  49% {
    opacity: 1;
  }
  50%,
  100% {
    opacity: 0;
  }
}

.terminal-cursor {
  animation: blink-cursor 1s infinite;
}

/* Theme color selection */
.theme-color-option {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
}

.theme-color-option:hover {
  transform: scale(1.2);
}

.theme-color-option.active {
  border: 2px solid white;
  box-shadow: 0 0 10px currentColor;
}

/* Game animations */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.game-win-animation {
  animation: pulse 1s infinite;
}

@keyframes flip {
  0% {
    transform: rotateY(0);
  }
  100% {
    transform: rotateY(180deg);
  }
}

.card-flip {
  animation: flip 0.5s forwards;
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

.game-over-shake {
  animation: shake 0.5s;
}
